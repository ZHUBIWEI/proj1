git push
#XXXXXXXXXXXXXXXXXXXXXXXX proj1.R XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# Biwei Zhu, s2325784
# Guanhao Su, s2301705
# Shuying Liu, s2436365
#XXXXXXXXXXXXXXXXXXXXXXXX Contribution XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXX The PATH XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
setwd("")
#XXXXXXXXXXXXXXXXXXXXXXXX proj1.R XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# Biwei Zhu, s2325784
# Guanhao Su, s2301705
# Shuying Liu, s2436365
#XXXXXXXXXXXXXXXXXXXXXXXX Contribution XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXX The PATH XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
setwd("C:/Users/lenovo/proj1")
# setwd("put/your/local/repo/location/here")
# setwd("put/your/local/repo/location/here")
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
a <- scan("pg10.txt",what="character",skip=104) ## skip contents
n <- length(a)
a <- a[-((n-2886):n)] ## strip license
a <- a[-grep("[0123456789]:[0123456789]",a)] ## strip out verse numbers
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXX split_punct XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# test = c("An", "omnishambles,", "in", "a", "headless", "chicken", "factory", ",")
is.integer0 <- function(x)
{
is.integer(x) & (length(x) == 0L)
}
split_punct <- function(x){
#1.The function should search for each word containing the punctuation mark.
#2.remove it from the word, and add it as a new entry in the vector of words #after the word it came from.
ls <- c(",", ".", ";", "!", ":", "?", "’")
lenl <- length(ls)
lenA <- 0
lenx <- length(x)
for(i in 1:lenl) {
#find the location of the words that contains punctuation.
# if fixed=TRUE, return value will become the corresponding repo of pattern.
#position ls[i] in x
location_has_punct <- grep(ls[i],x,fixed=TRUE)
#clear the punctuation from the words have that punctuation
x[location_has_punct] <- gsub(ls[i],"",x[location_has_punct], fixed=TRUE)
#The length of spilted punctuation
lenA <- lenA + length(location_has_punct)
#The total length for each loop
Total_len <- lenA + lenx
#xs is a vector to store the single digits
xs <- rep(0,Total_len)
#A is the location for a punctuation to insert in this loop
A <- location_has_punct + 1:length(location_has_punct)
xs[A] <- ls[i]
#avoid the case that there is no punctuation in each loop
if(is.integer0(location_has_punct)){
xs <-x
} else {
xs[-A] <- x
}
x <- xs
}
return(x)
}
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXX SPLIT-PUNCT END XXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXX M FREQUENT WORDS XXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
splited_text<- split_punct(a)
len_splited <- length(splited_text)
lower_splited_text <- tolower(splited_text)
# find the unique element of the splited text
unique_words <- unique(lower_splited_text,incomparables = NULL)
# match each word to the unique words
vector_match <- match(lower_splited_text,unique_words,incomparables = NULL)
cat(length(vector_match) == length(splited_text))#whether there is any blank,可以删掉
# count the number of times of occuring words
count_unique_words <- tabulate(vector_match)
# choosing the top 500 words
m <- 500
Order <- order(count_unique_words)#rearrange count_unique_words in upgrading order
most_common_word <- Order[(length(Order)- m + 1):length(Order)]#出现最多的500个单词在unique_words的下标
b <- unique_words[most_common_word]
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXX M FREQUENT WORDS END  XXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXX proj1.R XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# Biwei Zhu, s2325784
# Guanhao Su, s2301705
# Shuying Liu, s2436365
#XXXXXXXXXXXXXXXXXXXXXXXX Contribution XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXX The PATH XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
setwd("C:/Users/lenovo/proj1")
# setwd("put/your/local/repo/location/here")
# setwd("put/your/local/repo/location/here")
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
a <- scan("pg10.txt",what="character",skip=104) ## skip contents
n <- length(a)
a <- a[-((n-2886):n)] ## strip license
a <- a[-grep("[0123456789]:[0123456789]",a)] ## strip out verse numbers
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXX split_punct XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# test = c("An", "omnishambles,", "in", "a", "headless", "chicken", "factory", ",")
is.integer0 <- function(x)
{
is.integer(x) & (length(x) == 0L)
}
split_punct <- function(x){
#1.The function should search for each word containing the punctuation mark.
#2.remove it from the word, and add it as a new entry in the vector of words #after the word it came from.
ls <- c(",", ".", ";", "!", ":", "?", "’")
lenl <- length(ls)
lenA <- 0
lenx <- length(x)
for(i in 1:lenl) {
#find the location of the words that contains punctuation.
# if fixed=TRUE, return value will become the corresponding repo of pattern.
#position ls[i] in x
location_has_punct <- grep(ls[i],x,fixed=TRUE)
#clear the punctuation from the words have that punctuation
x[location_has_punct] <- gsub(ls[i],"",x[location_has_punct], fixed=TRUE)
#The length of spilted punctuation
lenA <- lenA + length(location_has_punct)
#The total length for each loop
Total_len <- lenA + lenx
#xs is a vector to store the single digits
xs <- rep(0,Total_len)
#A is the location for a punctuation to insert in this loop
A <- location_has_punct + 1:length(location_has_punct)
xs[A] <- ls[i]
#avoid the case that there is no punctuation in each loop
if(is.integer0(location_has_punct)){
xs <-x
} else {
xs[-A] <- x
}
x <- xs
}
return(x)
}
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXX SPLIT-PUNCT END XXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXX M FREQUENT WORDS XXXXXXXXXXXXXXXXXXX
#XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
splited_text<- split_punct(a)
splited_text
